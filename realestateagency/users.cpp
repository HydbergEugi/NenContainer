
// Используемые функции:
// Users(QWidget *parent) - инициализация формы;
// ~Users() - удаление формы;
// getUserName() - получение id вошедшего пользователя;
// setUserName(int id) - установление id вошедшего пользователя;
// users_opened() - слот открытия формы.

#include "users.h"
#include "ui_users.h"
// /////////////////////////////////////////////////////////////////////////////////////////
// Users(QWidget *parent) - инициализация формы.
//
// Формальные параметры:
// *parent - ссылка на родительское окно.
//
// Локальные переменные:
// ui - переменная пользовательского интерфейса;
// model - модель таблицы.
// /////////////////////////////////////////////////////////////////////////////////////////
Users::Users(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::Users)
{
    ui->setupUi(this);

    model = new QSqlTableModel;
    model->setTable("Customer");
    model->select();
    model->setEditStrategy(QSqlTableModel::OnFieldChange);
    model->setHeaderData(0, Qt::Horizontal, "Id \n пользователя");
    model->setHeaderData(1, Qt::Horizontal, "Фамилия");
    model->setHeaderData(2, Qt::Horizontal, "Имя");
    model->setHeaderData(3, Qt::Horizontal, "Отчество");
    model->setHeaderData(4, Qt::Horizontal, "Адрес");
    model->setHeaderData(5, Qt::Horizontal, "Телефон");
    model->setHeaderData(6, Qt::Horizontal, "Пароль");
    ui->tableView->setModel(model);
    ui->tableView->setEditTriggers(QAbstractItemView::NoEditTriggers);
}
// /////////////////////////////////////////////////////////////////////////////////////////
// ~Users() - удаление формы.
//
// Локальные переменные:
// ui - переменная пользовательского интерфейса.
// /////////////////////////////////////////////////////////////////////////////////////////
Users::~Users()
{
    delete ui;
}
// /////////////////////////////////////////////////////////////////////////////////////////
// getUserName() - получение id вошедшего пользователя.
//
// Локальные переменные:
// userId - id вошедшего пользователя.
// /////////////////////////////////////////////////////////////////////////////////////////
int currentUser::getUserName()
{
    return userId;
}
// /////////////////////////////////////////////////////////////////////////////////////////
// setUserName - получение id вошедшего пользователя.
//
// Формальные параметры:
// id - id пользователя.
//
// Локальные переменные:
// userId - id вошедшего пользователя.
// /////////////////////////////////////////////////////////////////////////////////////////
void currentUser::setUserName(int id)
{
    userId = id;
}
// /////////////////////////////////////////////////////////////////////////////////////////
// users_opened() - слот открытия формы.
// /////////////////////////////////////////////////////////////////////////////////////////
void Users::users_opened()
{
    show();
}
